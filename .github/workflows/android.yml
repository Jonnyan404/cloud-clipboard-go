name: Build Android APK

on:
  workflow_dispatch:

jobs:
  build-apk:
    name: Build Android APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Node.js for frontend build
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: client/package.json

      - name: Build frontend static assets
        run: |
          cd client
          npm install
          npm run build

      - name: Prepare Go embed directory
        run: |
          rm -rf cloud-clip/static
          mkdir -p cloud-clip/static
          cp -r client/dist/* cloud-clip/static/

      - name: Install and initialize gomobile
        run: |
          go install golang.org/x/mobile/cmd/gomobile@latest
          export PATH=$PATH:$(go env GOPATH)/bin
          gomobile init

      - name: Build Go AAR package
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          cd cloud-clip/mobile
          gomobile bind -v -tags embed -androidapi 24 -o cloudclipservice.aar -target=android -ldflags="-s -w" github.com/jonnyan404/cloud-clipboard-go/cloud-clip/mobile
          
          # Copy AAR to Android project
          mkdir -p ../../android/app/libs
          cp cloudclipservice.aar ../../android/app/libs/

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Make gradlew executable
        run: chmod +x ./android/gradlew

      - name: Build Android APK (Debug)
        run: |
          cd android
          ./gradlew assembleDebug --stacktrace

      - name: Get short commit SHA for artifact name
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: cloud-clipboard-go-debug-${{ steps.vars.outputs.sha_short }}
          path: android/app/build/outputs/apk/debug/app-debug.apk
          if-no-files-found: error